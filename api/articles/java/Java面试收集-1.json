{"title":"Java面试题收集整理","uid":"4ad643c3b688b2b0038ebbf29d874ce0","slug":"java/Java面试收集-1","date":"2025-09-01T07:00:00.000Z","updated":"2025-09-01T08:47:41.258Z","comments":true,"path":"api/articles/java/Java面试收集-1.json","keywords":null,"cover":null,"content":"<h1 id=\"Java-架构师面试问题完善答案\"><a href=\"#Java-架构师面试问题完善答案\" class=\"headerlink\" title=\"Java 架构师面试问题完善答案\"></a>Java 架构师面试问题完善答案</h1><h2 id=\"1-千万级用户电商系统架构设计\"><a href=\"#1-千万级用户电商系统架构设计\" class=\"headerlink\" title=\"1. 千万级用户电商系统架构设计\"></a>1. 千万级用户电商系统架构设计</h2><h3 id=\"整体架构选型\"><a href=\"#整体架构选型\" class=\"headerlink\" title=\"整体架构选型\"></a>整体架构选型</h3><p><strong>微服务架构</strong> + <strong>分层设计</strong></p>\n<ul>\n<li><strong>接入层</strong>：Nginx&#x2F;LVS 负载均衡 + CDN</li>\n<li><strong>网关层</strong>：Spring Cloud Gateway&#x2F;Kong，统一鉴权、限流、路由</li>\n<li><strong>业务层</strong>：微服务集群（用户、商品、订单、支付、库存等）</li>\n<li><strong>数据层</strong>：MySQL 主从+分库分表 + Redis 集群 + MQ</li>\n<li><strong>监控层</strong>：APM 监控 + 日志收集 + 告警系统</li>\n</ul>\n<h3 id=\"数据库设计策略\"><a href=\"#数据库设计策略\" class=\"headerlink\" title=\"数据库设计策略\"></a>数据库设计策略</h3><p><strong>分库分表方案</strong>：</p>\n<ul>\n<li><strong>用户库</strong>：按 user_id 取模分 16 库，每库分 64 表 → 支持 10 亿用户</li>\n<li><strong>订单库</strong>：按 user_id 分库（保证用户订单在同一库），按订单时间分表</li>\n<li><strong>商品库</strong>：按商品类目分库，热门商品单独缓存</li>\n<li><strong>读写分离</strong>：主库写入，从库查询，延迟控制在 100ms 内</li>\n</ul>\n<p><strong>数据一致性</strong>：</p>\n<ul>\n<li>强一致性：订单+支付（2PC&#x2F;TCC）</li>\n<li>最终一致性：积分+优惠券（消息队列异步处理）</li>\n</ul>\n<h3 id=\"缓存架构\"><a href=\"#缓存架构\" class=\"headerlink\" title=\"缓存架构\"></a>缓存架构</h3><p><strong>多层缓存设计</strong>：</p>\n<ul>\n<li><strong>L1 - 本地缓存</strong>：JVM 内 Caffeine，缓存热点数据（商品基础信息）</li>\n<li><strong>L2 - 分布式缓存</strong>：Redis 集群，主从+哨兵模式</li>\n<li><strong>L3 - CDN</strong>：静态资源和页面缓存</li>\n</ul>\n<p><strong>Redis 集群方案</strong>：</p>\n<ul>\n<li><strong>部署模式</strong>：3 主 3 从 + 哨兵集群</li>\n<li><strong>数据分片</strong>：一致性 Hash，支持动态扩容</li>\n<li><strong>缓存策略</strong>：<ul>\n<li>热点商品：缓存 1 小时，添加随机 30 分钟避免雪崩</li>\n<li>用户信息：缓存 30 分钟</li>\n<li>库存信息：缓存 5 分钟，结合本地缓存</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"高并发保障\"><a href=\"#高并发保障\" class=\"headerlink\" title=\"高并发保障\"></a>高并发保障</h3><p><strong>限流策略</strong>：</p>\n<ul>\n<li><strong>网关限流</strong>：令牌桶算法，按 IP&#x2F;用户&#x2F;接口多维度限流</li>\n<li><strong>服务限流</strong>：Sentinel&#x2F;Hystrix 熔断降级</li>\n<li><strong>数据库限流</strong>：连接池大小控制，慢查询监控</li>\n</ul>\n<p><strong>容量规划</strong>：</p>\n<ul>\n<li><strong>应用服务器</strong>：单机 2000QPS，部署 20+节点</li>\n<li><strong>数据库</strong>：主库写入 5000TPS，从库读取 20000QPS</li>\n<li><strong>Redis</strong>：单节点 10 万 QPS，集群总计 60 万 QPS</li>\n</ul>\n<h2 id=\"2-微服务拆分边界设计\"><a href=\"#2-微服务拆分边界设计\" class=\"headerlink\" title=\"2. 微服务拆分边界设计\"></a>2. 微服务拆分边界设计</h2><h3 id=\"服务拆分原则\"><a href=\"#服务拆分原则\" class=\"headerlink\" title=\"服务拆分原则\"></a>服务拆分原则</h3><p><strong>按业务领域拆分（DDD）</strong>：</p>\n<ol>\n<li><strong>用户域</strong>：用户中心服务（注册、登录、个人信息）</li>\n<li><strong>商品域</strong>：商品服务（商品信息、分类、搜索）+ 库存服务</li>\n<li><strong>交易域</strong>：订单服务 + 购物车服务</li>\n<li><strong>支付域</strong>：支付服务（多渠道支付）</li>\n<li><strong>营销域</strong>：优惠券服务 + 积分服务</li>\n<li><strong>基础域</strong>：通知服务、文件服务、配置中心</li>\n</ol>\n<h3 id=\"服务间通信\"><a href=\"#服务间通信\" class=\"headerlink\" title=\"服务间通信\"></a>服务间通信</h3><p><strong>同步调用</strong>：REST API（OpenFeign）</p>\n<ul>\n<li>用户信息查询、商品详情查询等<br><strong>异步通信</strong>：RocketMQ</li>\n<li>订单状态变更、支付成功通知、库存变更等</li>\n</ul>\n<h2 id=\"3-缓存深度设计\"><a href=\"#3-缓存深度设计\" class=\"headerlink\" title=\"3. 缓存深度设计\"></a>3. 缓存深度设计</h2><h3 id=\"缓存使用场景\"><a href=\"#缓存使用场景\" class=\"headerlink\" title=\"缓存使用场景\"></a>缓存使用场景</h3><ol>\n<li><strong>商品信息缓存</strong>：热门商品基础信息，缓存命中率&gt;95%</li>\n<li><strong>用户会话缓存</strong>：用户登录状态、购物车信息</li>\n<li><strong>库存缓存</strong>：实时库存信息，配合数据库双写</li>\n<li><strong>搜索结果缓存</strong>：热门关键词搜索结果</li>\n<li><strong>页面片段缓存</strong>：商品详情页 HTML 片段</li>\n</ol>\n<h3 id=\"缓存问题解决方案\"><a href=\"#缓存问题解决方案\" class=\"headerlink\" title=\"缓存问题解决方案\"></a>缓存问题解决方案</h3><p><strong>缓存击穿</strong>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 分布式锁+双重检查</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> Object <span class=\"title function_\">getFromCache</span><span class=\"params\">(String key)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Object</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> redis.get(key);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (value == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">lockKey</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;lock:&quot;</span> + key;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (redis.setIfAbsent(lockKey, <span class=\"string\">&quot;1&quot;</span>, Duration.ofSeconds(<span class=\"number\">10</span>))) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                value = redis.get(key); <span class=\"comment\">// 双重检查</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (value == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    value = loadFromDB(key);</span><br><span class=\"line\">                    redis.setEx(key, value, Duration.ofMinutes(<span class=\"number\">30</span>));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">                redis.delete(lockKey);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 等待并重试</span></span><br><span class=\"line\">            Thread.sleep(<span class=\"number\">50</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> getFromCache(key);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>缓存雪崩</strong>：</p>\n<ul>\n<li>缓存过期时间添加随机值（基础时间 ± 30%）</li>\n<li>多级缓存设计，避免单点故障</li>\n<li>熔断机制，缓存不可用时降级到数据库</li>\n</ul>\n<p><strong>缓存穿透</strong>：</p>\n<ul>\n<li>布隆过滤器预判断</li>\n<li>空值缓存（短时间）</li>\n<li>参数校验，避免恶意请求</li>\n</ul>\n<h2 id=\"4-JVM-调优详细方案\"><a href=\"#4-JVM-调优详细方案\" class=\"headerlink\" title=\"4. JVM 调优详细方案\"></a>4. JVM 调优详细方案</h2><h3 id=\"8G-内存服务器-JVM-参数设置\"><a href=\"#8G-内存服务器-JVM-参数设置\" class=\"headerlink\" title=\"8G 内存服务器 JVM 参数设置\"></a>8G 内存服务器 JVM 参数设置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-Xms4g -Xmx4g                    <span class=\"comment\"># 堆内存4G（物理内存50%）</span></span><br><span class=\"line\">-XX:MetaspaceSize=256m           <span class=\"comment\"># 元空间初始大小</span></span><br><span class=\"line\">-XX:MaxMetaspaceSize=512m        <span class=\"comment\"># 元空间最大大小</span></span><br><span class=\"line\">-XX:+UseG1GC                     <span class=\"comment\"># 使用G1垃圾收集器</span></span><br><span class=\"line\">-XX:MaxGCPauseMillis=100         <span class=\"comment\"># GC停顿时间目标100ms</span></span><br><span class=\"line\">-XX:G1HeapRegionSize=16m         <span class=\"comment\"># G1区域大小</span></span><br><span class=\"line\">-XX:+UseStringDeduplication      <span class=\"comment\"># 字符串去重</span></span><br><span class=\"line\">-XX:+PrintGCDetails              <span class=\"comment\"># 打印GC详情</span></span><br><span class=\"line\">-XX:+PrintGCTimeStamps           <span class=\"comment\"># 打印GC时间戳</span></span><br><span class=\"line\">-Xloggc:/path/to/gc.log         <span class=\"comment\"># GC日志文件</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JVM-性能问题排查工具\"><a href=\"#JVM-性能问题排查工具\" class=\"headerlink\" title=\"JVM 性能问题排查工具\"></a>JVM 性能问题排查工具</h3><p><strong>监控工具</strong>：</p>\n<ul>\n<li><strong>jstat</strong>：实时查看 GC 情况</li>\n<li><strong>jmap</strong>：内存 dump 分析</li>\n<li><strong>jstack</strong>：线程堆栈分析</li>\n<li><strong>MAT&#x2F;VisualVM</strong>：内存分析</li>\n<li><strong>Arthas</strong>：在线诊断工具</li>\n</ul>\n<p><strong>典型问题和解决方案</strong>：</p>\n<ul>\n<li><strong>Full GC 频繁</strong>：调整新生代比例，优化对象生命周期</li>\n<li><strong>内存泄漏</strong>：MAT 分析 dump 文件，定位大对象</li>\n<li><strong>CPU 高</strong>：jstack 分析线程状态，定位热点代码</li>\n</ul>\n<h2 id=\"5-分布式事务完整方案\"><a href=\"#5-分布式事务完整方案\" class=\"headerlink\" title=\"5. 分布式事务完整方案\"></a>5. 分布式事务完整方案</h2><h3 id=\"Saga-模式状态机设计\"><a href=\"#Saga-模式状态机设计\" class=\"headerlink\" title=\"Saga 模式状态机设计\"></a>Saga 模式状态机设计</h3><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;orderSagaStateMachine&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;startState&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;DeductStock&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;states&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;DeductStock&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;serviceTask&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;stockService.deduct&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;compensateState&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;RestoreStock&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;next&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;CreateOrder&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;CreateOrder&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;serviceTask&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;orderService.create&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;compensateState&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;CancelOrder&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;next&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;DeductBalance&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;DeductBalance&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;serviceTask&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;paymentService.deduct&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;compensateState&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;RestoreBalance&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;next&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;AddPoints&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;AddPoints&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;serviceTask&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;pointService.add&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;compensateState&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;DeductPoints&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;next&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;Succeed&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">]</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"补偿机制设计\"><a href=\"#补偿机制设计\" class=\"headerlink\" title=\"补偿机制设计\"></a>补偿机制设计</h3><p><strong>幂等性保证</strong>：每个服务操作和补偿操作都要支持幂等<br><strong>补偿顺序</strong>：严格按照执行顺序的逆序进行补偿<br><strong>异常处理</strong>：补偿失败时进入人工处理队列</p>\n<h2 id=\"6-线上问题应急处理流程\"><a href=\"#6-线上问题应急处理流程\" class=\"headerlink\" title=\"6. 线上问题应急处理流程\"></a>6. 线上问题应急处理流程</h2><h3 id=\"故障响应流程（SRE-标准）\"><a href=\"#故障响应流程（SRE-标准）\" class=\"headerlink\" title=\"故障响应流程（SRE 标准）\"></a>故障响应流程（SRE 标准）</h3><p><strong>第一阶段：止血（5 分钟内）</strong></p>\n<ol>\n<li><strong>快速判断影响面</strong>：监控大盘查看影响范围</li>\n<li><strong>紧急措施</strong>：<ul>\n<li>限流&#x2F;熔断止损</li>\n<li>快速回滚可疑变更</li>\n<li>扩容资源（如果是容量问题）</li>\n</ul>\n</li>\n</ol>\n<p><strong>第二阶段：定位（30 分钟内）</strong></p>\n<ol>\n<li><strong>日志分析</strong>：ELK 检索关键错误信息</li>\n<li><strong>监控分析</strong>：CPU、内存、网络、数据库指标</li>\n<li><strong>链路追踪</strong>：Skywalking&#x2F;Zipkin 分析慢请求</li>\n<li><strong>数据库分析</strong>：慢查询日志、锁等待情况</li>\n</ol>\n<p><strong>第三阶段：修复（2 小时内）</strong></p>\n<ol>\n<li><strong>根因修复</strong>：代码修复或配置调整</li>\n<li><strong>灰度验证</strong>：小流量验证修复效果</li>\n<li><strong>全量发布</strong>：确认无误后全量上线</li>\n</ol>\n<p><strong>第四阶段：复盘（24 小时内）</strong></p>\n<ul>\n<li>故障时间线梳理</li>\n<li>根本原因分析（5 个为什么）</li>\n<li>改进措施制定</li>\n<li>预防机制建立</li>\n</ul>\n<h2 id=\"7-健康检查机制完整实现\"><a href=\"#7-健康检查机制完整实现\" class=\"headerlink\" title=\"7. 健康检查机制完整实现\"></a>7. 健康检查机制完整实现</h2><h3 id=\"Spring-Boot-自定义健康检查\"><a href=\"#Spring-Boot-自定义健康检查\" class=\"headerlink\" title=\"Spring Boot 自定义健康检查\"></a>Spring Boot 自定义健康检查</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DependencyHealthIndicator</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">HealthIndicator</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisTemplate redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RocketMQTemplate rocketMQTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Health <span class=\"title function_\">health</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Redis健康检查</span></span><br><span class=\"line\">            redisTemplate.opsForValue().get(<span class=\"string\">&quot;health_check&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// MQ健康检查</span></span><br><span class=\"line\">            <span class=\"comment\">// 发送测试消息验证连通性</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> Health.up()</span><br><span class=\"line\">                .withDetail(<span class=\"string\">&quot;redis&quot;</span>, <span class=\"string\">&quot;UP&quot;</span>)</span><br><span class=\"line\">                .withDetail(<span class=\"string\">&quot;mq&quot;</span>, <span class=\"string\">&quot;UP&quot;</span>)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Health.down()</span><br><span class=\"line\">                .withDetail(<span class=\"string\">&quot;error&quot;</span>, e.getMessage())</span><br><span class=\"line\">                .build();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StartupHealthChecker</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ApplicationListener</span>&lt;ContextRefreshedEvent&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onApplicationEvent</span><span class=\"params\">(ContextRefreshedEvent event)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 启动时强制健康检查，失败则终止启动</span></span><br><span class=\"line\">        <span class=\"type\">Health</span> <span class=\"variable\">health</span> <span class=\"operator\">=</span> healthIndicator.health();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (health.getStatus() != Status.UP) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RuntimeException</span>(<span class=\"string\">&quot;依赖服务不可用，启动失败: &quot;</span> + health.getDetails());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运行时健康检查\"><a href=\"#运行时健康检查\" class=\"headerlink\" title=\"运行时健康检查\"></a>运行时健康检查</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RuntimeHealthChecker</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> <span class=\"type\">boolean</span> <span class=\"variable\">healthy</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Scheduled(fixedRate = 30000)</span> <span class=\"comment\">// 30秒检查一次</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">checkDependencies</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 检查关键依赖</span></span><br><span class=\"line\">            checkRedis();</span><br><span class=\"line\">            checkDatabase();</span><br><span class=\"line\">            checkMQ();</span><br><span class=\"line\">            healthy = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            healthy = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 触发告警</span></span><br><span class=\"line\">            alertService.sendAlert(<span class=\"string\">&quot;依赖服务异常: &quot;</span> + e.getMessage());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 请求拦截器，不健康时拒绝服务</span></span><br><span class=\"line\">    <span class=\"meta\">@Component</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HealthInterceptor</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">HandlerInterceptor</span> &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">preHandle</span><span class=\"params\">(HttpServletRequest request,</span></span><br><span class=\"line\"><span class=\"params\">                               HttpServletResponse response,</span></span><br><span class=\"line\"><span class=\"params\">                               Object handler)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!runtimeHealthChecker.isHealthy()) &#123;</span><br><span class=\"line\">                response.setStatus(<span class=\"number\">503</span>); <span class=\"comment\">// Service Unavailable</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-分布式限流系统设计\"><a href=\"#8-分布式限流系统设计\" class=\"headerlink\" title=\"8. 分布式限流系统设计\"></a>8. 分布式限流系统设计</h2><h3 id=\"整体架构\"><a href=\"#整体架构\" class=\"headerlink\" title=\"整体架构\"></a>整体架构</h3><p><strong>组件设计</strong>：</p>\n<ul>\n<li><strong>限流网关</strong>：基于 Redis+Lua 脚本的分布式限流</li>\n<li><strong>配置中心</strong>：Nacos&#x2F;Apollo 动态配置管理</li>\n<li><strong>监控告警</strong>：Prometheus+Grafana 实时监控</li>\n</ul>\n<h3 id=\"核心算法实现\"><a href=\"#核心算法实现\" class=\"headerlink\" title=\"核心算法实现\"></a>核心算法实现</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- Redis Lua脚本实现滑动窗口限流</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> key = KEYS[<span class=\"number\">1</span>]           <span class=\"comment\">-- 限流key</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> window = <span class=\"built_in\">tonumber</span>(ARGV[<span class=\"number\">1</span>])  <span class=\"comment\">-- 时间窗口（秒）</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> limit = <span class=\"built_in\">tonumber</span>(ARGV[<span class=\"number\">2</span>])   <span class=\"comment\">-- 限流阈值</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> now = <span class=\"built_in\">tonumber</span>(ARGV[<span class=\"number\">3</span>])     <span class=\"comment\">-- 当前时间戳</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 清理过期数据</span></span><br><span class=\"line\">redis.call(<span class=\"string\">&#x27;ZREMRANGEBYSCORE&#x27;</span>, key, <span class=\"number\">0</span>, now - window * <span class=\"number\">1000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 获取当前窗口内请求数</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> current = redis.call(<span class=\"string\">&#x27;ZCARD&#x27;</span>, key)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> current &lt; limit <span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"comment\">-- 允许请求，记录当前请求</span></span><br><span class=\"line\">    redis.call(<span class=\"string\">&#x27;ZADD&#x27;</span>, key, now, now .. <span class=\"string\">&#x27;-&#x27;</span> .. <span class=\"built_in\">math</span>.<span class=\"built_in\">random</span>())</span><br><span class=\"line\">    redis.call(<span class=\"string\">&#x27;EXPIRE&#x27;</span>, key, window + <span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"number\">1</span>, limit - current - <span class=\"number\">1</span>&#125; <span class=\"comment\">-- 允许，返回剩余配额</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>&#125; <span class=\"comment\">-- 拒绝</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"多维度限流实现\"><a href=\"#多维度限流实现\" class=\"headerlink\" title=\"多维度限流实现\"></a>多维度限流实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DistributedRateLimiter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisTemplate&lt;String, String&gt; redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> DefaultRedisScript&lt;List&gt; script = <span class=\"keyword\">new</span> <span class=\"title class_\">DefaultRedisScript</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">tryAcquire</span><span class=\"params\">(String resource, String identifier,</span></span><br><span class=\"line\"><span class=\"params\">                             <span class=\"type\">int</span> limit, <span class=\"type\">int</span> windowSize)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 构造多维度限流key</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> String.format(<span class=\"string\">&quot;rate_limit:%s:%s&quot;</span>, resource, identifier);</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;String&gt; keys = Collections.singletonList(key);</span><br><span class=\"line\">        List&lt;String&gt; args = Arrays.asList(</span><br><span class=\"line\">            String.valueOf(windowSize),</span><br><span class=\"line\">            String.valueOf(limit),</span><br><span class=\"line\">            String.valueOf(System.currentTimeMillis())</span><br><span class=\"line\">        );</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">List</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> redisTemplate.execute(script, keys, args.toArray());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (Integer) result.get(<span class=\"number\">0</span>) == <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用示例</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OrderController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;/order&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@RateLimit(key = &quot;#request.userId&quot;, limit = 100, window = 60)</span> <span class=\"comment\">// 用户级限流</span></span><br><span class=\"line\">    <span class=\"meta\">@RateLimit(key = &quot;api:/order&quot;, limit = 10000, window = 60)</span>    <span class=\"comment\">// 接口级限流</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Result <span class=\"title function_\">createOrder</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> CreateOrderRequest request)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 业务逻辑</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"动态配置管理\"><a href=\"#动态配置管理\" class=\"headerlink\" title=\"动态配置管理\"></a>动态配置管理</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@ConfigurationProperties(prefix = &quot;rate-limit&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@RefreshScope</span> <span class=\"comment\">// 支持动态刷新</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RateLimitConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;String, LimitRule&gt; rules = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LimitRule</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"type\">int</span> limit;      <span class=\"comment\">// 限流阈值</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"type\">int</span> windowSize; <span class=\"comment\">// 时间窗口</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> String strategy; <span class=\"comment\">// 限流策略：IP/USER/API</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@EventListener</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onConfigChange</span><span class=\"params\">(RefreshEvent event)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 配置变更时重新加载限流规则</span></span><br><span class=\"line\">        log.info(<span class=\"string\">&quot;限流配置已更新: &#123;&#125;&quot;</span>, rules);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"9-系统监控体系设计\"><a href=\"#9-系统监控体系设计\" class=\"headerlink\" title=\"9. 系统监控体系设计\"></a>9. 系统监控体系设计</h2><h3 id=\"监控维度\"><a href=\"#监控维度\" class=\"headerlink\" title=\"监控维度\"></a>监控维度</h3><p><strong>应用层监控</strong>：</p>\n<ul>\n<li><strong>QPS&#x2F;TPS</strong>：接口调用量和成功率</li>\n<li><strong>响应时间</strong>：P99、P95、P50 响应时间</li>\n<li><strong>错误率</strong>：4xx、5xx 错误统计</li>\n<li><strong>线程池状态</strong>：活跃线程数、队列长度</li>\n</ul>\n<p><strong>基础设施监控</strong>：</p>\n<ul>\n<li><strong>服务器</strong>：CPU、内存、磁盘、网络</li>\n<li><strong>数据库</strong>：连接数、慢查询、锁等待</li>\n<li><strong>缓存</strong>：命中率、内存使用、连接数</li>\n<li><strong>消息队列</strong>：消息堆积、消费速率</li>\n</ul>\n<p><strong>业务监控</strong>：</p>\n<ul>\n<li><strong>核心业务指标</strong>：订单量、支付成功率、用户活跃度</li>\n<li><strong>资金安全</strong>：异常交易监控</li>\n<li><strong>用户体验</strong>：页面加载时间、关键路径成功率</li>\n</ul>\n<h3 id=\"告警策略\"><a href=\"#告警策略\" class=\"headerlink\" title=\"告警策略\"></a>告警策略</h3><p><strong>分级告警</strong>：</p>\n<ul>\n<li><strong>P0</strong>：核心服务不可用（立即电话+短信）</li>\n<li><strong>P1</strong>：重要功能异常（15 分钟内响应）</li>\n<li><strong>P2</strong>：性能指标异常（1 小时内响应）</li>\n<li><strong>P3</strong>：非关键问题（工作时间处理）</li>\n</ul>\n<p><strong>智能告警</strong>：</p>\n<ul>\n<li><strong>异常检测算法</strong>：基于历史数据的异常波动检测</li>\n<li><strong>告警收敛</strong>：同类告警 5 分钟内只发送一次</li>\n<li><strong>升级机制</strong>：P1 问题 30 分钟无响应自动升级为 P0</li>\n</ul>\n<h2 id=\"10-技术选型权衡实例\"><a href=\"#10-技术选型权衡实例\" class=\"headerlink\" title=\"10. 技术选型权衡实例\"></a>10. 技术选型权衡实例</h2><h3 id=\"消息队列技术选型案例\"><a href=\"#消息队列技术选型案例\" class=\"headerlink\" title=\"消息队列技术选型案例\"></a>消息队列技术选型案例</h3><p><strong>业务场景</strong>：订单系统消息通知</p>\n<p><strong>候选方案</strong>：</p>\n<ol>\n<li><strong>RabbitMQ</strong>：功能丰富，支持多种消息模式</li>\n<li><strong>RocketMQ</strong>：阿里开源，适合高并发场景</li>\n<li><strong>Kafka</strong>：高吞吐，适合日志收集</li>\n</ol>\n<p><strong>决策矩阵</strong>：</p>\n<table>\n<thead>\n<tr>\n<th>维度</th>\n<th>RabbitMQ</th>\n<th>RocketMQ</th>\n<th>Kafka</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>性能</td>\n<td>中</td>\n<td>高</td>\n<td>最高</td>\n</tr>\n<tr>\n<td>可靠性</td>\n<td>高</td>\n<td>高</td>\n<td>中</td>\n</tr>\n<tr>\n<td>易用性</td>\n<td>高</td>\n<td>中</td>\n<td>低</td>\n</tr>\n<tr>\n<td>运维成本</td>\n<td>低</td>\n<td>中</td>\n<td>高</td>\n</tr>\n<tr>\n<td>团队熟悉度</td>\n<td>高</td>\n<td>低</td>\n<td>中</td>\n</tr>\n</tbody></table>\n<p><strong>最终选择</strong>：RocketMQ<br><strong>理由</strong>：业务对性能要求高，可靠性要求高，团队愿意投入学习成本</p>\n<h2 id=\"11-架构师核心能力模型\"><a href=\"#11-架构师核心能力模型\" class=\"headerlink\" title=\"11. 架构师核心能力模型\"></a>11. 架构师核心能力模型</h2><h3 id=\"技术能力演进路径\"><a href=\"#技术能力演进路径\" class=\"headerlink\" title=\"技术能力演进路径\"></a>技术能力演进路径</h3><p><strong>高级开发 → 架构师转变</strong>：</p>\n<ol>\n<li><p><strong>技术深度 → 技术广度</strong></p>\n<ul>\n<li>从精通某个技术栈 → 掌握多技术栈选型能力</li>\n<li>关注性能优化 → 关注系统整体架构</li>\n</ul>\n</li>\n<li><p><strong>解决问题 → 预防问题</strong></p>\n<ul>\n<li>从解决当前 bug → 设计可扩展、可维护的系统</li>\n<li>从个人效率 → 团队整体效率</li>\n</ul>\n</li>\n<li><p><strong>技术视角 → 业务+技术视角</strong></p>\n<ul>\n<li>理解业务需求，技术服务于业务</li>\n<li>成本意识，ROI 评估能力</li>\n</ul>\n</li>\n<li><p><strong>个人贡献 → 团队赋能</strong></p>\n<ul>\n<li>技术方案设计与推动</li>\n<li>团队技术能力提升</li>\n<li>跨部门协作能力</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"能力建设建议\"><a href=\"#能力建设建议\" class=\"headerlink\" title=\"能力建设建议\"></a>能力建设建议</h3><p><strong>短期（1 年）</strong>：</p>\n<ul>\n<li>深入学习分布式系统理论（CAP、BASE 等）</li>\n<li>实践容器化和云原生技术</li>\n<li>提升系统设计和性能调优能力</li>\n</ul>\n<p><strong>中期（2-3 年）</strong>：</p>\n<ul>\n<li>培养业务理解能力，参与产品设计</li>\n<li>建立技术团队影响力，输出技术方案</li>\n<li>学习团队管理和项目管理</li>\n</ul>\n<p><strong>长期（3-5 年）</strong>：</p>\n<ul>\n<li>成为某个技术领域的专家</li>\n<li>具备从 0 到 1 构建大型系统的能力</li>\n<li>培养技术前瞻性，把握技术发展趋势</li>\n</ul>\n","feature":true,"text":"Java 架构师面试问题完善答案1. 千万级用户电商系统架构设计整体架构选型微服务架构 + 分层设计 接入层：Nginx/LVS 负载均衡 + CDN 网关层：...","permalink":"/post/java/Java面试收集-1","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"java","slug":"java","count":3,"path":"api/categories/java.json"}],"tags":[{"name":"面试","slug":"面试","count":2,"path":"api/tags/面试.json"},{"name":"java","slug":"java","count":2,"path":"api/tags/java.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Java-%E6%9E%B6%E6%9E%84%E5%B8%88%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E5%AE%8C%E5%96%84%E7%AD%94%E6%A1%88\"><span class=\"toc-text\">Java 架构师面试问题完善答案</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%8D%83%E4%B8%87%E7%BA%A7%E7%94%A8%E6%88%B7%E7%94%B5%E5%95%86%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">1. 千万级用户电商系统架构设计</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E9%80%89%E5%9E%8B\"><span class=\"toc-text\">整体架构选型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">数据库设计策略</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%93%E5%AD%98%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">缓存架构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%AB%98%E5%B9%B6%E5%8F%91%E4%BF%9D%E9%9A%9C\"><span class=\"toc-text\">高并发保障</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E8%BE%B9%E7%95%8C%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">2. 微服务拆分边界设计</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E5%8E%9F%E5%88%99\"><span class=\"toc-text\">服务拆分原则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E9%97%B4%E9%80%9A%E4%BF%A1\"><span class=\"toc-text\">服务间通信</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E7%BC%93%E5%AD%98%E6%B7%B1%E5%BA%A6%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">3. 缓存深度设计</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%93%E5%AD%98%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">缓存使用场景</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">缓存问题解决方案</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-JVM-%E8%B0%83%E4%BC%98%E8%AF%A6%E7%BB%86%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">4. JVM 调优详细方案</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8G-%E5%86%85%E5%AD%98%E6%9C%8D%E5%8A%A1%E5%99%A8-JVM-%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">8G 内存服务器 JVM 参数设置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JVM-%E6%80%A7%E8%83%BD%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">JVM 性能问题排查工具</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E5%AE%8C%E6%95%B4%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">5. 分布式事务完整方案</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Saga-%E6%A8%A1%E5%BC%8F%E7%8A%B6%E6%80%81%E6%9C%BA%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">Saga 模式状态机设计</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A1%A5%E5%81%BF%E6%9C%BA%E5%88%B6%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">补偿机制设计</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98%E5%BA%94%E6%80%A5%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">6. 线上问题应急处理流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%85%E9%9A%9C%E5%93%8D%E5%BA%94%E6%B5%81%E7%A8%8B%EF%BC%88SRE-%E6%A0%87%E5%87%86%EF%BC%89\"><span class=\"toc-text\">故障响应流程（SRE 标准）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5%E6%9C%BA%E5%88%B6%E5%AE%8C%E6%95%B4%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">7. 健康检查机制完整实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Spring-Boot-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5\"><span class=\"toc-text\">Spring Boot 自定义健康检查</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E6%97%B6%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5\"><span class=\"toc-text\">运行时健康检查</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-%E5%88%86%E5%B8%83%E5%BC%8F%E9%99%90%E6%B5%81%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">8. 分布式限流系统设计</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">整体架构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%B8%E5%BF%83%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">核心算法实现</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%BB%B4%E5%BA%A6%E9%99%90%E6%B5%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">多维度限流实现</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">动态配置管理</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7%E4%BD%93%E7%B3%BB%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">9. 系统监控体系设计</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%91%E6%8E%A7%E7%BB%B4%E5%BA%A6\"><span class=\"toc-text\">监控维度</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%91%8A%E8%AD%A6%E7%AD%96%E7%95%A5\"><span class=\"toc-text\">告警策略</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#10-%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B%E6%9D%83%E8%A1%A1%E5%AE%9E%E4%BE%8B\"><span class=\"toc-text\">10. 技术选型权衡实例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B%E6%A1%88%E4%BE%8B\"><span class=\"toc-text\">消息队列技术选型案例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#11-%E6%9E%B6%E6%9E%84%E5%B8%88%E6%A0%B8%E5%BF%83%E8%83%BD%E5%8A%9B%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">11. 架构师核心能力模型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8A%80%E6%9C%AF%E8%83%BD%E5%8A%9B%E6%BC%94%E8%BF%9B%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">技术能力演进路径</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%83%BD%E5%8A%9B%E5%BB%BA%E8%AE%BE%E5%BB%BA%E8%AE%AE\"><span class=\"toc-text\">能力建设建议</span></a></li></ol></li></ol></li></ol>","author":{"name":"Gao","slug":"blog-author","avatar":"/img/favicon.ico","link":"/","description":"一些收集总结","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"Cloudflared Tunnel ipv6","uid":"c5e09afc7ded2f44e395222316bd8c7e","slug":"cloudflare/cloudflared tunnel","date":"2024-12-01T16:00:00.000Z","updated":"2024-12-02T11:55:34.700Z","comments":true,"path":"api/articles/cloudflare/cloudflared tunnel.json","keywords":null,"cover":null,"text":"Cloudflared Tunnel ipv61docker run cloudflare/cloudflared:latest tunnel --no-aut...","permalink":"/post/cloudflare/cloudflared tunnel","photos":[],"count_time":{"symbolsCount":339,"symbolsTime":"1 mins."},"categories":[{"name":"Cloudflare","slug":"Cloudflare","count":1,"path":"api/categories/Cloudflare.json"}],"tags":[{"name":"Cloudflared","slug":"Cloudflared","count":1,"path":"api/tags/Cloudflared.json"}],"author":{"name":"Gao","slug":"blog-author","avatar":"/img/favicon.ico","link":"/","description":"一些收集总结","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}